<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ServiceManage.Interface</name>
    </assembly>
    <members>
        <member name="T:EasyGame.ServiceManage_InterfaceSerializeExtension">
            <exclude/>
        </member>
        <member name="T:EasyGame.IHostCommandProxy">
            <exclude/>
        </member>
        <member name="T:EasyGame.IHostManagerProxy">
            <exclude/>
        </member>
        <member name="T:EasyGame.IAuthProtocolImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.IHostCommandImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.IHostManagerImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.IHostProtocolImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.ILoggerProtocolImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.IMonitorProtocolImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.IServiceClassProtocolImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.IServiceProtocolImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.IUserProtocolImpl">
            <exclude/>
        </member>
        <member name="T:EasyGame.IHostCommandStub">
            <exclude/>
        </member>
        <member name="T:EasyGame.IHostManagerStub">
            <exclude/>
        </member>
        <member name="T:EasyGame.ErrCode">
            <summary>
              Service error code
            </summary>
        </member>
        <member name="T:EasyGame.LogCategory">
            <summary>
              Log classification
            </summary>
        </member>
        <member name="T:EasyGame.HostInfoData">
            <summary>
            the host information data
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.HostName">
            <summary>
            host name
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.IP">
            <summary>
            host ip
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.Status">
            <summary>
            host status
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.RegisterTime">
            <summary>
            host register time
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.OS">
            <summary>
            The operation system of the host
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.HostVersion">
            <summary>
            the version of the host program
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.Processor">
            <summary>
            the processor information
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.PhysicalMemorySize">
            <summary>
            the physical memory size (bytes)
            </summary>
        </member>
        <member name="F:EasyGame.HostInfoData.MonitorDescription">
            <summary>
            the monitor description items
            </summary>
        </member>
        <member name="T:EasyGame.IHostCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:EasyGame.IHostCommand.StartService(System.String,System.String,System.String,System.String[])">
            <summary>
              Notify ServiceHost to start a service
            </summary>
            <param name="sessionId">session id</param>
            <param name="serviceName">service instance name</param>
            <param name="program">service program name</param>
            <param name="commands">command line sent after startup</param>
            <returns>process id</returns>
          </member>
          <member name="M:EasyGame.IHostCommand.SendCmdToService(System.String,System.String)">
            <summary>
              Notify ServiceHost to send a command to service
            </summary>
            <param name="serviceName"></param>
            <param name="command"></param>
          </member>
          <member name="M:EasyGame.IHostCommand.StopService(System.String)">
            <summary>
              Notify Host to shut down service
            </summary>
            <param name="serviceName"></param>
          </member>
          <member name="M:EasyGame.IHostCommand.KillService(System.String)">
            <summary>
              Notify the Host to force the end of the service
            </summary>
            <param name="serviceName"></param>
          </member>
          <member name="M:EasyGame.IHostCommand.Ping(System.Int32)">
            <summary>
              The service manager sends a Ping message to confirm that the connection exists
            </summary>
            <remarks>The host needs to respond with the same tick value</remarks>
            <param name="tick">tickå€¼</param>
        </member>
        <member name="M:EasyGame.IHostCommand.UpdateServiceFiles(System.String,System.String)">
            <summary>
            notify ServiceHost to update the service files
            </summary>
            <param name="service">the service instance name</param>
            <param name="serviceClass">the service class name</param>
            <returns>the current revision of service</returns>
        </member>
        <member name="M:EasyGame.IHostCommand.HotUpdateServiceFiles(System.String,System.String,System.String)">
            <summary>
            notify ServiceHost to update the service files
            </summary>
            <param name="service">the service instance name</param>
            <param name="serviceClass">the service class name</param>
            <param name="path">the subfolder or filename to update</param>
        </member>
        <member name="M:EasyGame.IHostCommand.ServiceDisconnect(System.String)">
            <summary>
              Notify the host that the connection between service and serviceManager is interrupted, and let the host notify the service to reconnect to serviceManager.
            </summary>
            <param name="service"></param>
          </member>
          <member name="M:EasyGame.IHostCommand.UpdateSourceFiles(System.Int32)">
            <summary>
              notify ServiceHost to update the source files from the svn repository
            </summary>
            <param name="revision">-1 means lastest version</param>
            <returns>the current revision</returns>
          </member>
          <member name="M:EasyGame.IHostCommand.UpdateServiceHost(System.String)">
            <summary>
              notify ServiceHost to update itself from the url
            </summary>
            <remarks>after update success the service host will be resart</remarks>
            <param name="url">the service host packe file url</param>
          </member>
          <member name="M:EasyGame.IHostCommand.JobCancel">
            <summary>
              force to cancel the current job
            </summary>
          </member>
          <member name="M:EasyGame.IHostCommand.SystemRestart">
            <summary>
              Host restart
            </summary>
          </member>
          <member name="M:EasyGame.IHostCommand.RunCmd(System.String)">
            <summary>
              run a command
            </summary>
          </member>
          <member name="T:EasyGame.IHostManager">
            <summary>
              Service management
            </summary>
            <remarks>
              The service manager is used to register and manage all logical services and physical servers
            </remarks>
          </member>
          <member name="M:EasyGame.IHostManager.RegisterHost(System.String,System.String,System.String,EasyGame.MetricSampleDescData[])">
            <summary>
              The host registers with ServiceManager
            </summary>
            <param name="hostName">the host name</param>
            <param name="os">the operation system of the host</param>
            <param name="version">the version of the host</param>
            <param name="monitorDefinition">monitor data definition</param>
        </member>
        <member name="M:EasyGame.IHostManager.UploadMonitorData(System.DateTime,EasyGame.MetricSampleData[])">
            <summary>
            report the monitor data to service manager
            </summary>
            <param name="timeStamp">monitor data time stamp</param>
            <param name="dataSet">the host monitor data points</param>
        </member>
        <member name="M:EasyGame.IHostManager.UploadServiceMonitorData(System.String,System.DateTime,EasyGame.MetricSampleData[])">
            <summary>
            report the service emonitor data to service manager
            </summary>
            <param name="name"></param>
            <param name="timeStamp"></param>
            <param name="dataSet"></param>
        </member>
        <member name="M:EasyGame.IHostManager.OnServiceFailed(System.String,System.String)">
            <summary>
            the host report the service failed down message
            </summary>
            <param name="serviceName"></param>
            <param name="errMsg"></param>
        </member>
        <member name="M:EasyGame.IHostManager.OnServiceExit(System.String)">
            <summary>
            the host report the service program exit message
            </summary>
            <param name="serviceName"></param>
        </member>
        <member name="M:EasyGame.IHostManager.WriteLog(System.String,EasyGame.LogInfoData)">
            <summary>
            Write the log content
            </summary>
            <param name="name"></param>
            <param name="log"></param>
        </member>
        <member name="M:EasyGame.IHostManager.WriteLogs(System.String,EasyGame.LogInfoData[])">
            <summary>
            write the logs in batch mode
            </summary>
            <param name="name"></param>
            <param name="logs"></param>
        </member>
        <member name="M:EasyGame.IHostManager.ConsoleLog(EasyGame.LogLevel,System.DateTime,System.String)">
            <summary>
              Console log information sent by ServiceHost
            </summary>
            <param name="level"></param>
            <param name="logTime"></param>
            <param name="message"></param>
          </member>
          <member name="M:EasyGame.IHostManager.HostClose">
            <summary>
              Host close notification
            </summary>
          </member>
          <member name="T:EasyGame.ServiceCmdData">
            <summary>
              Command configuration provided by the service
            </summary>
          </member>
          <member name="F:EasyGame.ServiceCmdData.Name">
            <summary>
              Command display name
            </summary>
          </member>
          <member name="F:EasyGame.ServiceCmdData.Cmd">
            <summary>
              Command name
            </summary>
          </member>
          <member name="F:EasyGame.ServiceCmdData.Parameters">
            <summary>
              Command parameter name (commas separate multiple parameters)
            </summary>
          </member>
          <member name="T:EasyGame.ServiceClassData">
            <summary>
              Service class configuration
            </summary>
          </member>
          <member name="F:EasyGame.ServiceClassData.Name">
            <summary>
              Service class name
            </summary>
        </member>
        <member name="F:EasyGame.ServiceClassData.Path">
            <summary>
              Service storage path
            </summary>
          </member>
          <member name="F:EasyGame.ServiceClassData.LaunchCommand">
            <summary>
              Service startup command
            </summary>
          </member>
          <member name="F:EasyGame.ServiceClassData.Commands">
            <summary>
              Commands provided by the service
            </summary>
          </member>
          <member name="F:EasyGame.ServiceInstanceData.LaunchCommands">
            <summary>
              commands for service launch
            </summary>
          </member>
          <member name="F:EasyGame.ServiceInstanceData.AutoStart">
            <summary>
              automatic start while servicemanager launched
            </summary>
          </member>
          <member name="F:EasyGame.ServiceInstanceData.MonitorDefinition">
            <summary>
              the monitor description items
            </summary>
          </member>
          <member name="T:EasyGame.ServiceStatusData">
            <summary>
              Service status data
            </summary>
          </member>
          <member name="T:EasyGame.HostStatusData">
            <summary>
              Host status data
            </summary>
          </member>
          <member name="T:EasyGame.MonitorDataPoint">
            <summary>
              Monitoring data sampling point
            </summary>
          </member>
          <member name="F:EasyGame.MonitorDataPoint.sampleTime">
            <summary>
              Sampling time
            </summary>
          </member>
          <member name="F:EasyGame.MonitorDataPoint.Interval">
            <summary>
              Sampling interval (seconds)
            </summary>
        </member>
        <member name="F:EasyGame.MonitorDataPoint.MaxValue">
          <summary>
            Maximum value within the sampling interval
          </summary>
        </member>
        <member name="F:EasyGame.MonitorDataPoint.MinValue">
          <summary>
            Minimum value within the sampling interval
          </summary>
        </member>
        <member name="F:EasyGame.MonitorDataPoint.AverageValue">
          <summary>
            Average value within the sampling interval
          </summary>
        </member>
        <member name="F:EasyGame.ParameterData.Name">
          <summary>
            parameter name
          </summary>
        </member>
        <member name="F:EasyGame.ParameterData.Type">
          <summary>
            parameter type: (number, string, bool, date...)
          </summary>
        </member>
        <member name="T:EasyGame.JobData">
          <summary>
            Host task data
          </summary>
        </member>
        <member name="T:ServiceConfig.ServiceConfigData">
          <summary>
            Service deployment configuration
          </summary>
        </member>
        <member name="F:ServiceConfig.ServiceConfigData.Name">
          <summary>
            Deployment configuration name
          </summary>
        </member>
        <member name="F:ServiceConfig.ServiceConfigData.Instances">
          <summary>
            Service instance
          </summary>
        </member>
    </members>
</doc>
